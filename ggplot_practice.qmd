---
title: "Data Visualization with ggplot"
author: "Henron Oliver"
format: html
---


```{r}
library(tidyverse)
library(here)
library(janitor)

# Specifically for plots:
library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(ggExtra)
library(ggbeeswarm)

# And for another dataset we'll explore:
library(gapminder)

# Spatial
library(sf)
```

## Ggplot basics

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))
```

### The essentials
Key Elements:
  - Data
  - Axis
  - Geometry
```{r}
ggplot(data = lizards,
       aes(x = total_length, y = weight)) +
  geom_point()

# second - makes the same graph

ggplot(data = lizards) +
  geom_point(aes(x = total_length, y = weight))


# third - makes the same graph. This is the most flexible
ggplot() +
  geom_point(data = lizards,
             aes(x = total_length, y = weight))
```

## Swap out geometries

```{r}
ggplot(data = lizards,
       aes(x = total_length, y = weight)) +
  geom_line()
#Bad

```

Some geometry types only need one axis
```{r}
ggplot( data = lizards, aes(x = total_length)) +
  geom_histogram()

```

Jitter plots usually are best with one categorical and one continuous variable

```{r}
ggplot(data = lizards, 
       aes(x = weight, y = common_name)) +
  geom_jitter()
```

## Aesthetic mapping
### Updating based on a constant value
Don't need to use the 'aes()' function!

```{r}
ggplot(data = lizards, aes(x = weight)) +
  geom_histogram(color = "brown", #border color
                 fill = "yellow",
                 alpha = 0.78, #transparency
                 linetype = "twodash")

```

## Updating aesthetics based on variables
In that case, we need to use the 'aes()' function
```{r}
ggplot(data = lizards,
       aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name), 
             alpha = 0.3)
```

# Themes
## Update axis labels
```{r}

ggplot(data = lizards, aes(x = weight, y = site)) +
  geom_jitter(aes(color = common_name)) +
  theme_linedraw() +
  labs(title = "lizards weights",
       x = "Lizard Weight (g)",
       y = "Where at the lizard was",
       subtitle = "Jornada, NM",
       color = "Lizard ethnicity")
```


```{r}
lizard_counts <- lizards %>% 
  count(common_name)

ggplot(data = lizard_counts,
       aes(x = n, y = fct_reorder(common_name, n))) +
  geom_col() +
  labs( x = 'Individuals (n)',
        y = 'Sour cream and onion')
```

